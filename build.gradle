plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.10'
    id 'maven-publish'
    id 'signing'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.10'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.3.10'

    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.9.0'

    testCompile group: 'com.natpryce', name: 'hamkrest', version: '1.6.0.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
}

allprojects {
    version = '0.0.2'
    group = 'com.github.pseudometa'

    repositories {
        mavenCentral()
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'map4k'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Map4K'
                description = 'Simple auto-mapping for Kotlin'
                url = 'https://github.com/pseudometa/map4k'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'zerocode'
                        name = 'zerocode'
                        email = 'iolop@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:pseudometa/map4k.git'
                    developerConnection = 'scm:git@github.com:pseudometa/map4k.git'
                    url = 'https://github.com/pseudometa/map4k'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = RELEASE_REPOSITORY_URL
            def snapshotsRepoUrl = SNAPSHOT_REPOSITORY_URL
            url = isReleaseBuild() ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = NEXUS_USERNAME
                password = NEXUS_PASSWORD
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}